<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="UserRole">

    <resultMap id="UserRoleMap" type="UserRole">
    	<result column="ID" property="id" jdbcType="DECIMAL"/>
    	<result column="U_ID" property="userId" jdbcType="DECIMAL"/>
    	<result column="R_ID" property="roleId" jdbcType="DECIMAL"/>
    	<result column="REMARK" property="remark" jdbcType="VARCHAR"/>
    	<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
    	<result column="CREATE_USER" property="createUser" jdbcType="VARCHAR"/>
    	<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
    	<result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR"/>
    	<result column="YN" property="yn" jdbcType="DECIMAL"/>
    </resultMap>
    
    <sql id="userRoleColumns">
    	ID,U_ID,R_ID,REMARK,CREATE_TIME,CREATE_USER,UPDATE_TIME,UPDATE_USER,YN
    </sql>
    
     <sql id="userRoleUsedColumns">
    	U_ID,R_ID,REMARK,CREATE_TIME,CREATE_USER,UPDATE_TIME,UPDATE_USER,YN
    </sql>

    <!-- 创建信息 -->
    <insert id="insert" parameterType="UserRole">
        insert into p_user_role (<include refid="userRoleUsedColumns"/>)
        values(#{userId},#{roleId},#{remark},now(),#{createUser},now(),#{updateUser},#{yn})
    </insert>

    <!-- 修改信息 -->
    <update id="update" parameterType="UserRole">
        <if test="_parameter != null">
            <if test="id != null and id > 0">
                update p_user_role set
		        <if test="userId != null and id > 0">
                	U_ID = #{userId,jdbcType=DECIMAL},
		        </if>
		        <if test="roleId != null and id > 0">
                	R_ID = #{roleId,jdbcType=DECIMAL},
		        </if>
		        <if test="remark != null and remark != ''">
                	REMARK = #{remark,jdbcType=VARCHAR},
		        </if>
		        <if test="updateUser != null and updateUser != ''">
                	UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
		        </if>
                	update_time = now()
                where id = #{id}
            </if>
        </if>
    </update>

    <!-- 根据主键获取对象信息 -->
    <select id="getUserRoleById" resultMap="UserRoleMap" parameterType="java.lang.Long">
        <if test="_parameter != null">
            select <include refid="userRoleColumns"/> from p_user_role
            where id = #{_parameter}
        </if>
    </select>

    <!-- 根据查询Bean获取数据集合，不带翻页 -->
    <select id="queryUserRoleList" resultMap="UserRoleMap"
            parameterType="com.hbird.portal.domain.query.UserRoleQuery">
        select <include refid="userRoleColumns"/> from p_user_role where <include refid="queryUserRoleListWhere"/>
    </select>

    <!-- 根据查询Bean获取数据集合，翻页 -->
    <select id="queryUserRoleListWithPage" resultMap="UserRoleMap"
            parameterType="com.hbird.portal.domain.query.UserRoleQuery">
        select <include refid="userRoleColumns"/> from p_user_role where <include refid="queryUserRoleListWhere"/>
        order by create_time desc 
        limit #{startIndex},#{pageSize};
    </select>

    <!-- 根据查询Bean获取集合总数 -->
    <select id="queryUserRoleCount" resultType="java.lang.Integer"
            parameterType="com.hbird.portal.domain.query.UserRoleQuery">
        select count(1) from p_user_role where <include refid="queryUserRoleListWhere"/>
    </select>

    <!-- 删除信息 -->
    <update id="deleteUserRoleById" parameterType="java.lang.Long">
        <if test="_parameter != null and _parameter > 0">
            update p_user_role set yn = 1 where id = #{_parameter}
        </if>
    </update>

    <!-- 依据用户ID删除信息 -->
    <update id="deleteUserRoleByUserId" parameterType="java.lang.Long">
        <if test="_parameter != null and _parameter > 0">
            update p_user_role set yn = 1 where u_id = #{_parameter}
        </if>
    </update>

 <!-- 依据用户ID集合批量删除信息 -->
    <update id="deleteUserRoleByUserIds" parameterType="java.lang.String">
        <if test="_parameter != null and _parameter !=''">
            update p_user_role set yn = 1 where u_id in
            	<foreach item="uid" index="index" collection="array" open="(" separator="," close=")">

              #{uid}

           </foreach>
        </if>
    </update>
    <!-- 常用的查询Where条件 -->
    <sql id="queryUserRoleListWhere">
    	yn = 0
        <if test="userId != null">
           	and U_ID = #{userId,jdbcType=DECIMAL}
        </if>
        <if test="roleId != null">
           	and R_ID = #{roleId,jdbcType=DECIMAL}
        </if>
        <if test="createUser != null and createUser != ''">
            and CREATE_USER like concat('%',#{createUser,jdbcType=VARCHAR},'%')
        </if>
        <if test="updateUser != null and updateUser != ''">
            and UPDATE_USER like concat('%',#{updateUser,jdbcType=VARCHAR},'%')
        </if>
        <if test="remark != null and remark != ''">
            and REMARK like concat('%',#{remark,jdbcType=VARCHAR},'%')
        </if>
        <if test="startTime != null and startTime != ''">
            and create_time <![CDATA[>=]]> str_to_date(#{startTime},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="endTime != null and endTime != ''">
            and create_time<![CDATA[<=]]> str_to_date(#{endTime},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="userIds != null and userIds !=''">
           	and U_ID in
           	<foreach item="uid" index="index" collection="userIds" open="(" separator="," close=")">

              #{uid}

           </foreach>
        </if>
    </sql>
</mapper>